name: Deploy Project
on: #[push, workflow_dispatch]
  push:
    branches:
      - master
jobs: 
  lint:
      runs-on: ubuntu-latest
      steps: 
        - name: Download code
          uses: actions/checkout@v3
        - name: Install NodeJs
          uses: actions/setup-node@v3
          with:
            node-version: 18
        - name: Cache Dependencies
          uses: actions/cache@v3
          with:
            path: ~/.npm
            key: deps-node-modules-${{ hashFiles('**/package-lock.json') }}
        - name: Install Dependencies
          run: npm ci
        - name: Lint
          run: npm run lint
  test:
    #needs: lint
    runs-on: ubuntu-latest
    steps: 
      - name: Download code
        uses: actions/checkout@v3
      - name: Install NodeJs
        uses: actions/setup-node@v3
        with:
          node-version: 18
      - name: Cache Dependencies
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: deps-node-modules-${{ hashFiles('**/package-lock.json') }}
      - name: Install Dependencies
        run: npm ci
      - name: Run Tests
        id: test
        run: npm test 
      - name: Upload test report
        if: failure() && steps.test.outcome  == 'failure'
        uses: actions/upload-artifact@v3
        with:
          name: test-report
          path: test.json
  build:
    needs: test
    runs-on: ubuntu-latest
    outputs:
      script-file: ${{ steps.publish.outputs.script-file }}
    steps: 
      - name: Download code
        uses: actions/checkout@v3
      - name: Install NodeJs
        uses: actions/setup-node@v3
        with:
          node-version: 18
      - name: Cache Dependencies
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: deps-node-modules-${{ hashFiles('**/package-lock.json') }}
      - name: Install Dependencies
        run: npm ci
      - name: build
        run: npm run build 
      - name: Publish js file name
        id: publish
        run: find dist/assets/*.js -type f -execdir echo 'script-file={}' >> $GITHUB_OUTPUT ';'
      - name: upload artifacts
        uses: actions/upload-artifact@v3
        with: 
          name: dist-files
          path: dist
          # path: |
          #   dist
          #   package.json
  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Get build artifacts
        uses: actions/download-artifact@v3
        with:
          name: dist-files
      - name: Deploy 
        run: |
          echo "Deplyoment Started..." 
          ls 
      - name: Output filename
        run: echo "${{ needs.build.outputs.script-file }}"
  report:
    needs: [deploy,lint]
    if: failure()
    runs-on: ubuntu-latest
    steps:
      - name: Output Information
        run: |
         echo "Something went wrong"
         echo " {{ github }}"